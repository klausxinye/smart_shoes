package com.testBlueTooth;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.io.UnsupportedEncodingException;

import android.os.Bundle;
import android.os.Handler;
import android.os.Message;
import android.app.Activity;
import android.content.Intent;
import android.content.SharedPreferences;
import android.util.Log;
import android.view.View;
import android.widget.Button;
import android.widget.EditText;
import android.widget.TextView;
import android.widget.Toast;

public class userWeight extends Activity {

	private Handler mHandler;
	Button btnMeasure,btnBack;
	float weight=0,adjustFactor;
	TextView tvWeight;
	int getWeight;
	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.userweight);
		retrieveSharedPreferences();
		tvWeight = (TextView)this.findViewById(R.id.tvWeight);
		tvWeight.setText(""+(int)weight+"Kg");
		btnMeasure = (Button) this.findViewById(R.id.btnMeasure);
		btnMeasure.setOnClickListener(new ClickEvent());
		btnBack = (Button) this.findViewById(R.id.btnBack);
		btnBack.setOnClickListener(new ClickEvent());
		//System.out.println(loadFromSDFile("testfile.txt"));
		//System.Pause("");
	}
	private class ClickEvent implements View.OnClickListener{

		@Override
		public void onClick(View v) {
			// TODO Auto-generated method stub
			if(v == btnMeasure)
			{
				sendAndReceive();
				Log.d("adjustfactor","ad"+userInfo.adjustFactor);
				weight = adjustFactor * getWeight;
				Log.d("adjustweight","ad"+weight);
				mHandler = new MyHandler();
				mHandler.sendEmptyMessage(02);
				saveInSharedPreferences();
				//sqliteUserInfo.insertWeight(username, user.weight);
			}
			if(v == btnBack)
			{
				Intent intent = new Intent();
				intent.setClass(userWeight.this,mainpage.class);
				startActivity(intent);
			}
			
	}
	}
	private class MyHandler extends Handler{ 
		@Override		    
	    public void dispatchMessage(Message msg) { 
			switch(msg.what){
			case 02:
				tvWeight.setText(""+(int)weight+"Kg");//setView(user);
				//userInfoActivity.this.sendMessage("W");
				//getMessage();
				//tvWeight.setText("体重"+getWeight+"Kg");
				//userInfoActivity.this.sendMessage("E");
				break;

	        default:	            
	            break;
			}
			}
	}
	public void saveInSharedPreferences(){
		SharedPreferences formStore;
		formStore = getSharedPreferences("userInfo",Activity.MODE_PRIVATE);
		SharedPreferences.Editor editor = formStore.edit();
		editor.putFloat("weight",weight);
		editor.commit();
	}
	public void retrieveSharedPreferences(){
		 SharedPreferences formStore;
			formStore = getSharedPreferences("userInfo",Activity.MODE_PRIVATE);
			weight = formStore.getFloat("weight",0);
			adjustFactor = formStore.getFloat("adjustFactor",0);

		}
	public void sendAndReceive() {
		InputStream inStream = null;
		OutputStream outStream = null;
		//控制模块
		try {
			outStream = testBlueTooth.btSocket.getOutputStream();	
		} catch (IOException e) {
			Toast.makeText(getApplicationContext(), " Output stream creation failed.", Toast.LENGTH_SHORT);
			
		}
		try {					
			inStream = testBlueTooth.btSocket.getInputStream();
		} catch (IOException e) {
			Toast.makeText(getApplicationContext(), " input stream creation failed.", Toast.LENGTH_SHORT);
			
		}	
		String  encodeType ="GBK";
		byte[] msgBuffer = null;
		String message = "D";
		try {
			msgBuffer = message.getBytes(encodeType);//编码
		} catch (UnsupportedEncodingException e1) {
			e1.printStackTrace();
			Log.e("write", "Exception during write encoding GBK ", e1);
		}
		for (int i = 0; i< 3;i ++) 
		{
				try {
					outStream.write(msgBuffer);				
				} catch (IOException e) {
					Toast.makeText(getApplicationContext(), "发送数据失败", Toast.LENGTH_SHORT);
					
				}					                      
			byte[] temp = new byte[5];
			String tmp = "";
			int readnum = 0;
			if (inStream!= null) {
			try{
					int len = inStream.read(temp,0,5);
					//len = inStream.read(temp,0,1);
					Log.v("len","::"+len);
						if (len > 0) 
						{
							//读编码
				            readnum =(int) (temp[0] & 0xff)<<8 | (temp[1] & 0xff);
				            getWeight = (4095 - readnum);
				            //fout.write((Integer.toString(4095-readnum)+"\n") .getBytes("utf-8"));
				            Log.v("the num read is","::"+readnum);
				           // mHandler.obtainMessage(01,len,-1,tmp).sendToTarget();
				            
						}			             
		             Thread.sleep(100);// 延时一定时间缓冲数据
		             //isRecording = false;
		             //mHandler.obtainMessage(01,len,-1,int2char(4095 - readnum)).sendToTarget();
					}catch (Exception e) {
						// TODO Auto-generated catch block
						//mHandler.sendEmptyMessage(00);
					}				
			
			}
		}
		
	}
}


